%YAML 1.1
---

###############################################################################
# In all reality the most important KEYS are NAME and SERVER. The reason you
# would seperate out blocks is for reusability for complex similiar app servers
# that share attributes but are disimmilar enough to drive one mad if it failed
# and you found yourself having to rebuild it from scratch without a blueprint.
# When fully expanding the SERVER key with a parser such as PyYAML you will see
# the bare minimum SERVER configuration and structure that an application such
# as droned would expect.  This structure is designed to be easily viewable by
# a human being when viewing the raw yaml itself.  The ROMEO library will make
# this human friendly config natural for a programmer to use in code as well,
# with the goal of not having to worry much about the data structure that backs
# the modeled objects.
#
# You may add additional KEY VALUE pairs at will to any structure and ROMEO
# will make them available to a programmer for access.  As a convention these
# KEYS should be all uppercase and unique (ie don't use the same key in 
# multiple object descriptions, unless you like pain and suffering).
###############################################################################

- NAME: example #the name of this environmental object

- MODEL: &example-model
    INSTANCES: 0 #how many instances of this application should be expected
    INSTALLMETHOD: null #may be useful to other applications
    CLASS: null #droned application plugin __class__ to handle app specific logic
    STARTUP_INFO:
        START_ENV: {} #key, value env settings
        START_CMD: '' #full path to execute a start command
        START_ARGS: [] #a list of command line switches to pass to the start command
    SHUTDOWN_INFO:
        STOP_ENV: {} #key, value env settings
        STOP_CMD: '' #full path to execute a stop command
        STOP_ARGS: [] #a list of command line switches to pass to the start command

- SERVICE: &example-service
        SERVICENAME: jabber #this is a droned service name to start
        #you may add arbitrary keys to this section

- ARTIFACT: &example-artifact
        <<: *example-model
        SHORTNAME: test #this should be an app name (httpd)
        FULLNAME: test-name #this should be the full name (apache-httpd)

- SERVERGROUP: &example-group
        GROUPNAME: example-group #useful to establish server groups
        ARTIFACTS: [ *example-artifact ]

- SERVER:
        HOSTNAME: localhost #machine name identifier that uniquely identifies a host
        <<: *example-group
        SERVICES: [*example-service]
